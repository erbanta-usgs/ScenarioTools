<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonBrowseFile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGOfPtRkwAAACBjSFJNAAB6
        JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAAACXBIWXMAAAsSAAALEgHS3X78AAAD0UlE
        QVRIS6WWbUxTVxjHcXh7LQKVMV8y3eZ8AZQZ2SvZYghEcbCouI0xX5ARlcS4Mf3g5ofFtIVlXcciRDIS
        DS4aiCZjC5QAEtqGQiiNHaEYbIRGMmErBAi0o7W9I5H/nnMdF2ara92HX3Jyevv7n+e555w2AkBEqETm
        LbERYMR9Jkd0kYyN64mUxzlCljMBidKJ/UQ5f2SpK7MuEXubksUwmisMFhJWwGIBCdezilhAUe/b8yH7
        Hw2RAtqUyws7SiLwKDTvIoK2gLVm1ZloFN9JQ775DVbFb0EDSJDOxL7pnyB4Lkv43RoMNKeJoeyZYMQc
        fOYPVsGJ/nfwkiouoFViBUwwcec8/C5VAJ6xs7BWvwbr5VSJ3tqdcLQeh6M5FxlnVyKrIQkFPW9ipy5B
        fOmLq5AC/NNl8E+eC5sDla8g4+dNyLOkYF9HMmT5keRf2JlSgG/kDELBZjuK6AJO3KrzZN1IEuW7DYlQ
        FPOLP7NJAd7BTxEqekMOFEc5ZDUl4aPu7dhrSkamPgFpLRuQ2vAiNlbFI+rgEjQqIx6Wwt6Bp+9YSAzV
        v47ObyJxSRMHRZEcO+pefihv3oC3Gl5A4qXnEHs8Cq1mDUyaGLcUMGM5hCcxaXwPljI5urQ8xvo0mPV0
        wHTrvBiScvV5UZ7wj9w0cA2DjXugV/H1CwHtH2BG5H1MtOwOOA+sygHdPgiuRsy6fpT4xVwM7nAk1mkV
        tHI5THYtfK6aua7vVwh6ZdRGKcDVugcMe/VmWC9uwYhVS1u3Eq57tZj1tmF2RgdhSgthsiQAbf27WH6E
        g+n2KXr2Apw3c2FQ8/2s/QvnoCWbVp4Fy4V18I7WQRj7Miwm+guoqlII02pYq1bd16uWff6vgNGmTNyu
        3kRtyIF/+FTYjFpyIYyfw9StArSX8uPzZ0GqYFiXgZvl8fCOXIH/7smwGe3MgTD8xZz9+lYYVPzFgAB7
        zTbYrqaSWAmfvShsnIZsOkcn0amR/6VXyjcHBFgq4jHeVwFf3ydPhfPGLgzVveo2qjijKP/9K7E7UovM
        FWsg3KuGz3roqXDq0tFdFvunQSXLC7iLaBJ39afh+7UQPsvH/4m3Ow9T+mwMXUtBb9VamMtWwPT1sgdG
        9VJxawYE0D0Pt+NKUDGTTbTtgqN2G3p+WAPzdwqYSvk5kt03qrkhg5qrpfEBOohrCS5oALvr/Y4KeLo+
        hLNxBwZrtqKncjXM2hh0lPK0Ms5LIjtVep3G+SR6NtQ/CmI5neXrPV3fRqO9RPbAqJK5SdRPVJE0k2Sy
        UGVP/NEnUez/ET3uu38DfPUnijj/z3IAAAAASUVORK5CYII=
</value>
  </data>
</root>